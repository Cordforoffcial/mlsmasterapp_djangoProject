# Generated by Django 4.2.1 on 2025-07-21 12:04

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('excelexport', '0002_inspectionreport'),
    ]

    operations = [
        migrations.CreateModel(
            name='SampleParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_number', models.CharField(help_text='Enter sample identification number', max_length=100)),
                ('heat_number', models.CharField(help_text='Enter heat treatment number', max_length=100)),
                ('mass', models.FloatField(help_text='Enter mass value (grams)', validators=[django.core.validators.MinValueValidator(0)])),
                ('length', models.FloatField(help_text='Enter length value (mm)', validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Sample Parameters',
                'verbose_name_plural': 'Sample Parameters',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScaleLoadMeasurements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utn_scale', models.FloatField(help_text='Enter UTN scale value', validators=[django.core.validators.MinValueValidator(0)])),
                ('yield_load_main_scale', models.FloatField(help_text='Enter yield load (kN)', validators=[django.core.validators.MinValueValidator(0)])),
                ('yield_load_counter_part', models.FloatField(help_text='Enter counter yield load (kN)', validators=[django.core.validators.MinValueValidator(0)])),
                ('tensile_load_main_scale', models.FloatField(help_text='Enter tensile load (kN)', validators=[django.core.validators.MinValueValidator(0)])),
                ('tensile_load_counter_part', models.FloatField(help_text='Enter counter tensile load (kN)', validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Scale & Load Measurements',
                'verbose_name_plural': 'Scale & Load Measurements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WaterSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('water_pressure_in', models.FloatField(help_text='Enter inlet pressure (bar)', validators=[django.core.validators.MinValueValidator(0)])),
                ('water_pressure_out', models.FloatField(help_text='Enter outlet pressure (bar)', validators=[django.core.validators.MinValueValidator(0)])),
                ('water_in_temperature', models.FloatField(help_text='Enter inlet temperature (°C)')),
                ('water_out_temperature', models.FloatField(help_text='Enter outlet temperature (°C)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Water System',
                'verbose_name_plural': 'Water Systems',
                'ordering': ['-created_at'],
            },
        ),
    ]
